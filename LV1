#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void gen_arr (float V[], int n, float dg, float gg);
int sekv_pret (float V[], int n, float x);
void sort (float V[], int n);
int bin_pret (float V[], int n, float x);
void zamjena(int* const, int* const);


int
main () {
  float dg = 0;
  float gg = 100;
  float V[1000];
  time_t t1, t2;
  int n = 1000;
  float x = 14.781225;
  
  t1 = clock ();
  srand ((unsigned) time (NULL));
  gen_arr (V, n, dg, gg);
    
  for (int i = 0; i < n; i++){
    printf ("%f\n", V[i]);  
  }
  sekv_pret(V, n, x);  
  sort(V, n);
  bin_pret(V, n, x);
  
  t2 = clock ();

  printf ("Vrijeme trajanja je %dms\n", t2 - t1);
  return 0;
}

void gen_arr (float V[], int n, float dg, float gg) {
  for (int i = 0; i < n; i++) {
      V[i] = dg + (float) rand () / RAND_MAX * (gg - dg);
     
    }
}

int sekv_pret (float V[], int n, float x){
    for (int i = 0; i < n; i++){
        if (V[i] == x) {
            return i;
        }
    }
    return -1;
}
void zamjena(int* const veci, int* const manji) {
    int temp = 0;
    temp = *manji;
    *manji = *veci;
    *veci = temp;
}

void sort (float V[], int n){
    int min = -1;
    for (int i = 0; i < n - 1; i++)
    {
        min = i;
        for (int j = i + 1; j < n; j++)
        {
            if (V[j] < V[min]) {
                min = j;
            }
        }
        zamjena(&V[i], &V[min]);
    }   
}

int bin_pret (float V[], int n, float x){
    int dg = 0;
    int gg = n - 1;
    int s = -1;
    while (dg <= gg) {
        s = (dg + gg) / 2;
        if (V[s] == x) {
            return s;
        }
        else if (V[s] > x) {
            gg = s - 1;
        }
        else {
            dg = s + 1;
        }
    }
    return -1;

}
